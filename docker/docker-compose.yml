version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: spaceship-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: spaceship-zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: spaceship-kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=spaceship-zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_LISTENER_PORT=9092
      - KAFKA_CFG_LISTENER_INTERFACE=0.0.0.0
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - "9092:9092"

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: spaceship-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/spaceships
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=spaceship-kafka:9092
    depends_on:
      - mongodb
      - kafka

volumes:
  mongo_data:
